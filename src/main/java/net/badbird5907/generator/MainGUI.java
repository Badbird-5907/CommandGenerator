package net.badbird5907.generator;

import com.formdev.flatlaf.IntelliJTheme;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import lombok.Getter;

import javax.swing.*;
import java.awt.*;
import java.awt.datatransfer.StringSelection;
import java.io.InputStream;
import java.text.ParseException;
import java.util.Random;

public class MainGUI {
    private static final String BASE = "/data merge entity %id% " +
            "{Offers:{Recipes:[" +
            "{buy:{id:%buyid%,Count:%buycount%}," +
            "sell:{id:%sellid%,Count:%sellcount%},maxUses:9999999}," +

            "{buy:{id:emerald,Count:%price%},buyB:{id:book,Count:1}," +
            "sell:{id:enchanted_book,Count:1," +
            "tag:{StoredEnchantments:[{id:%enchant%,lvl:%level%}]}}," +
            "maxUses:9999999}]}}";
    @Getter
    private static MainGUI INSTANCE;
    @Getter
    private static JFrame frame;
    private JTabbedPane mainPane;
    private JPanel panel1;
    private JButton goButton;
    private JTextField villagerId;
    private JTextField buy;
    private JSpinner buyAmount;
    private JTextField enchant;
    private JSpinner enchantLevel;
    private JSpinner price;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    public static void main(String[] args) {
        InputStream stream = MainGUI.class.getClassLoader().getResourceAsStream("XCodeDark.theme.json");
        if (stream == null)
            System.err.println("stream is null");
        else IntelliJTheme.setup(stream);
        frame = new JFrame("Command Utils");
        INSTANCE = new MainGUI();
        frame.setContentPane(INSTANCE.panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(350, 420);
        frame.pack();
        frame.setVisible(true);
        INSTANCE.goButton.addActionListener(e -> {
            try {
                INSTANCE.buyAmount.commitEdit();
                INSTANCE.enchantLevel.commitEdit();
                INSTANCE.price.commitEdit();
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            Random random = new Random();
            boolean randBoolean = random.nextBoolean();
            int buyAmount = (int) INSTANCE.buyAmount.getValue();
            if (buyAmount == 0) buyAmount = randBoolean ? 9 : 24;
            String s =
                    BASE.replace("%id%", INSTANCE.villagerId.getText().toLowerCase().replace("/tp ", "").replace("/data get entity ", "")).
                            replace("%buyid%", INSTANCE.buy.getText().toLowerCase().replace("%random_buy%", randBoolean ? "emerald" : "paper")).
                            replace("%buycount%", String.valueOf(buyAmount)).
                            replace("%enchant%", INSTANCE.enchant.getText()).
                            replace("%level%", String.valueOf(INSTANCE.enchantLevel.getValue())).
                            replace("%price%", String.valueOf(INSTANCE.price.getValue())).
                            replace("%sellid%", randBoolean ? "bookshelf" : "emerald").
                            replace("%sellcount%", randBoolean ? "1" : "1");
                    ;
            System.out.println(s);
            Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(s), null);
            JOptionPane.showMessageDialog(null, "Command has been copied to your clipboard:\n" + s);
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPane = new JTabbedPane();
        panel1.add(mainPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(6, 6, new Insets(0, 0, 0, 0), -1, -1));
        mainPane.addTab("Librarian Enchant", panel2);
        goButton = new JButton();
        goButton.setText("Go!");
        panel2.add(goButton, new GridConstraints(5, 0, 1, 6, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        villagerId = new JTextField();
        villagerId.setText("Villager ID");
        panel2.add(villagerId, new GridConstraints(0, 0, 1, 6, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        buyAmount = new JSpinner();
        panel2.add(buyAmount, new GridConstraints(1, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buyAmount.setValue("Item Price");
        final Spacer spacer2 = new Spacer();
        panel2.add(spacer2, new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        enchant = new JTextField();
        enchant.setText("Enchant");
        panel2.add(enchant, new GridConstraints(2, 0, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        enchantLevel = new JSpinner();
        panel2.add(enchantLevel, new GridConstraints(2, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buy = new JTextField();
        //buy.setText("Item to buy Per emerald (not enchanted book)");
        buy.setText("paper");
        panel2.add(buy, new GridConstraints(1, 0, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        price = new JSpinner();
        panel2.add(price, new GridConstraints(3, 0, 1, 6, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
